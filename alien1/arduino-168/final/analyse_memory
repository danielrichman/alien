#!/bin/sh

[ $# -eq 1 ] || { echo "Usage: $0 mapfilename.map"; exit; }
[ -f $1 ]    || { echo "Map file not found"; exit; }

alien_map1=$((`grep etext        $1 | awk '{ print \$1; }'`))
alien_map2=$((`grep __data_start $1 | awk '{ print \$1; }'`))
alien_map3=$((`grep __data_end   $1 | awk '{ print \$1; }'`))
alien_map4=$((`grep __bss_start  $1 | awk '{ print \$1; }'`))
alien_map5=$((`grep __bss_end    $1 | awk '{ print \$1; }'`))
alien_map6=$((`grep __heap_start $1 | awk '{ print \$1; }'`))

pgm_size=$alien_map1
data_size=$(($alien_map3-$alien_map2))
bss_size=$(($alien_map5-$alien_map4))
heap_start=$(($alien_map6-$alien_map2))

echo
echo ".text       (program code):                         $alien_map1"
echo ".data       (hardcoded global vars):                $data_size"
echo ".bss        (empty global vars):                    $bss_size"
echo ".heap_start (offset from start of RAM):             $heap_start"
echo
echo "Note: .bss takes up virtually no space in flash, but all of the "
echo ".bss bytes are initialized to 0 in ram by gcc at startup "
echo

